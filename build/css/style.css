/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */

      -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}
/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}
/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block;
}
/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;

  margin: .67em 0;
}
/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block;
}
/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  /* 1 */
  overflow: visible;

  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 2 */
}
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}
/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */

  -webkit-text-decoration-skip: objects;
  /* 2 */
}
/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  /* 1 */
          text-decoration: underline;
          text-decoration: underline dotted;

  border-bottom: none;
  /* 2 */

  -webkit-text-decoration: underline dotted;
  /* 2 */
}
/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}
/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}
/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}
/**
 * Add the correct background and color in IE 9-.
 */
mark {
  color: #000;
  background-color: #ff0;
}
/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}
/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;

  position: relative;

  vertical-align: baseline;
}
sub {
  bottom: -.25em;
}
sup {
  top: -.5em;
}
/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block;
}
/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;

  height: 0;
}
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}
/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}
/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */

  margin: 0;
  /* 2 */
}
/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}
/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}
/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}
/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  padding: 0;

  border-style: none;
}
/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}
/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: .35em .75em .625em;
}
/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  /* 2 */
  display: table;

  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */

  white-space: normal;
  /* 1 */

  color: inherit;
  /* 1 */
}
/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */

  vertical-align: baseline;
  /* 2 */
}
/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}
/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}
/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  /* 1 */
  outline-offset: -2px;

  -webkit-appearance: textfield;
  /* 2 */
}
/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  /* 1 */
  font: inherit;

  -webkit-appearance: button;
  /* 2 */
}
/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block;
}
/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}
/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block;
}
/**
 * Add the correct display in IE.
 */
template {
  display: none;
}
/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none;
}
/**
 * Fonts * 
 */
/**
 * Paths *
 */
/**
 * Breakpoints * 
 */
@font-face {
  font-family: "Ubuntu";
  font-weight: 500;
  font-style: normal;

  src: url("../fonts/Ubuntu/ubuntu-medium.woff2") format("woff2"), url("../fonts/Ubuntu/ubuntu-medium.woff") format("woff");
}
@font-face {
  font-family: "Ubuntu";
  font-weight: 400;
  font-style: normal;

  src: url("../fonts/Ubuntu/ubuntu-regular.woff2") format("woff2"), url("../fonts/Ubuntu/ubuntu-regular.woff") format("woff");
}
@font-face {
  font-family: "Ubuntu";
  font-weight: 300;
  font-style: normal;

  src: url("../fonts/Ubuntu/ubuntu-light.woff2") format("woff2"), url("../fonts/Ubuntu/ubuntu-light.woff") format("woff");
}
html {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
html,
body {
  height: 100%;

  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale !important;
}
body {
  font-family: "Ubuntu", "Arial", sans-serif;
  font-size: 12px;

  min-width: 320px;
  margin: 0;
  padding: 0;

  color: #3f3d3d;

  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
img {
  max-width: 100%;
  height: auto;

  vertical-align: bottom;

  border: none;
}
.container {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  max-width: 1170px;
  margin-right: auto;
  margin-left: auto;
  padding: 0 15px;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
}
a {
  margin: 0;
  padding: 0;

  text-decoration: none;
}
input,
textarea {
  font-family: inherit;
}
.page-header__bottom {
  background: #f0f0f0;
}
.page-header__nav-toggler {
  font-size: 18px;
  line-height: 1;

  position: relative;

  display: none;

  padding: 15px 17px;

  text-transform: uppercase;

  color: #000;
  background: #ededed;
}
.page-header__nav-burger {
  position: absolute;
  top: 50%;
  right: 17px;

  display: block;

  width: 20px;
  height: 3px;

  border-radius: 1.5px;
  background: #000;
}
.page-header__nav-burger::before,
.page-header__nav-burger::after {
  position: absolute;
  left: 0;

  width: 100%;
  height: 3px;

  content: "";

  border-radius: 1.5px;
  background: #000;
}
.page-header__nav-burger::before {
  top: -7px;
}
.page-header__nav-burger::after {
  bottom: -7px;
}
.page-header__nav-list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;

  margin: 0;
  padding: 0;

  list-style: none;

  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
.page-header__nav-item {
  font-size: 13px;
  line-height: 1.1;

  color: #3f3d3d;
}
.page-header__nav-item--active {
  background: #e0e0e0;
}
.page-header__nav-item a {
  display: block;

  padding: 13px;

  color: inherit;
}
.logo {
  text-align: center;
  text-transform: uppercase;

  color: inherit;
}
.logo__title {
  font-size: 28px;
  line-height: 1;

  margin-bottom: 14px;
}
.logo__subtitle {
  font-size: 12px;
  line-height: 1;

  margin-top: 14px;
}
.fl-left {
  float: left;
}
.fl-right {
  float: right;
}
.full-width {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  width: 100%;
}
.half-width {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  width: 50%;
}
.text-left {
  text-align: left;
}
.text-right {
  text-align: right;
}
.text-center {
  text-align: center;
}
.main-nav__list {
  margin: 0;
  padding: 0;

  list-style: none;
}
.btn {
  display: inline-block;

  cursor: pointer;
  vertical-align: middle;

  border: none;
  outline: none;
}
@media (max-width: 992px) {
}
@media (max-width: 767px) {
  .page-header__nav-toggler {
    display: block;
  }
  .page-header__nav-list {
        flex-direction: column;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
  .logo__title {
    font-size: 50px;
  }
  .logo__subtitle {
    font-size: 28px;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
